# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.53.1"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
  end

  desc "Run unit  tests"
  lane :unittest do
    scan(scheme: "worshipsongsTests", code_coverage: true, output_types: "junit", output_directory:"fastlane/report", custom_report_file_name: "TEST-report.xml")
  end

  desc "Run code analysis and publish result to sonarqube"
  lane :codeanalysis do
    slather(cobertura_xml: true, jenkins: true, output_directory: "fastlane/report", scheme: "worshipsongs", workspace: "worshipsongs.xcworkspace", proj: "worshipsongs.xcodeproj", binary_basename: "worshipsongs")
    sh('cd .. && lizard worshipsongs -l swift --xml --exclude "*/Pods/*" > fastlane/report/lizard-report.xml')
    swiftlint(output_file: "fastlane/report/swiftlint.txt", ignore_exit_status: true)
    sonar
  end

  lane :package do
    cert
    sigh(force: true)
    gym(scheme: "worshipsongs")
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    pilot(skip_submission: true, skip_waiting_for_build_processing: true)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "worshipsongs") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
