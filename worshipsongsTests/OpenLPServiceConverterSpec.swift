//
// Author: James Selvakumar
// Since: 3.0.0
// Copyright © 2021 mCruncher. All rights reserved.
// 

import Foundation
import Quick
import Nimble
import SwiftyJSON
@testable import worshipsongs

class OpenLPServiceConverterSpec : QuickSpec {
    override func spec() {
        describe("OpenLPServiceConverter") {
            let openLPServiceConverter = OpenLPServiceConverter()
            let songsModel: [Songs] = DatabaseHelper().getSongModel()
            var favouriteList: [FavoritesSongsWithOrder]!
            var expectedJson: JSON!
            var result: JSON!
            
            describe("Convert favourite list to OpenLP Service Lite JSON format") {
                context("given a favourite list exist with some songs") {
                    beforeEach {
                        print(songsModel[0].title)
                        print(songsModel[1].title)
                        
                        let favouriteSong1 = FavoritesSongsWithOrder(orderNo: 1, songName: songsModel[0].title, songListName: "foo")
                        let favouriteSong2 = FavoritesSongsWithOrder(orderNo: 2, songName: songsModel[1].title, songListName: "foo")
                        favouriteList = [favouriteSong1, favouriteSong2]
                    }
                    
                    context("and a oszl (OpenLP Service Lite) json generated by OpenLP exists for the same songs in the same order") {
                        beforeEach {
                            let bundle = Bundle(for: type(of: self))
                            let path = bundle.path(forResource: "openlp-service-lite", ofType: "osj")!
                            let jsonData = NSData(contentsOfFile: path)!
                            //let jsonString = String(data: jsonData as Data, encoding: .utf8)
                            expectedJson = try! JSON(data: jsonData as Data)
                            print("Expected Json:\n \(expectedJson)")
                        }
                        
                        context("when converting the favourite list to oszl json format") {
                            beforeEach {
                                result = openLPServiceConverter.toOszlJson(favouriteList: favouriteList!)
                            }
                            
                            it("should have a top level array with three elements") {
                                expect(result.count).to(equal(expectedJson.count))
                            }
                            
                            it("should have general service info as the first element of the array") {
                                let generalServiceInfo = result[0]
                                let openlpCore = generalServiceInfo["openlp_core"]
                                
                                expect(openlpCore["lite_service"].bool).to(beTrue())
                                expect(openlpCore["service_theme"]).to(beEmpty())
                            }
                            
                            it("should have the following service header for the first song") {
                                let expectedSongTitle = "Aabiragaamin Thaevan"
                                let expectedAuthor = "Fr. S. J. Berchmans {பெர்க்மான்ஸ்}"
                                
                                let serviceItem = result[1]["serviceitem"]
                                let serviceItemHeader = serviceItem["header"]
                                
                                print("No. of elements in service item header: \(serviceItemHeader.count)")
                                expect(serviceItemHeader.count).to(equal(expectedJson[1]["serviceitem"]["header"].count))
                                
                                expect(serviceItemHeader["name"]).to(equal("songs"))
                                expect(serviceItemHeader["plugin"]).to(equal("songs"))
                                expect(serviceItemHeader["theme"].null).to(beAnInstanceOf(NSNull.self))
                                expect(serviceItemHeader["title"].string).to(equal(expectedSongTitle))
                                
                                let footer = serviceItemHeader["footer"]
                                expect(footer.count).to(equal(2))
                                expect(footer[0].string).to(equal(expectedSongTitle))
                                expect(footer[1].string).to(equal("Written by: \(expectedAuthor)"))
                                
                                expect(serviceItemHeader["type"]).to(equal(1))
                                expect(serviceItemHeader["icon"]).to(equal(":/plugins/plugin_songs.png"))

                                let audit = serviceItemHeader["audit"]
                                expect(audit.count).to(equal(4))
                                expect(audit[0].string).to(equal(expectedSongTitle))
                                expect(audit[1]).to(equal(["\(expectedAuthor)"]))
                                expect(audit[2]).to(equal(""))
                                expect(audit[3]).to(equal(""))
                                
                                expect(serviceItemHeader["notes"]).to(equal(""))
                                expect(serviceItemHeader["from_plugin"].bool).to(beFalse())
                                expect(serviceItemHeader["capabilities"]).to(equal([2, 1, 5, 8, 9, 13]))
                                expect(serviceItemHeader["search"]).to(equal(""))
                                
                                let data = serviceItemHeader["data"]
                                let expectedTitleInData = "aabiragaamin thaevan@abrahamin daevan abiragamin devan"
                                expect(data.count).to(equal(2))
                                expect(data["title"].string).to(equal(expectedTitleInData))
                                expect(data["authors"].string).to(equal(expectedAuthor))
                                
                                //expect(serviceItemHeader["xml_version"].string).to(equal(self.getExpectedLyricsForSong1()))
                                
                                expect(serviceItemHeader["auto_play_slides_once"].bool).to(beFalse())
                                expect(serviceItemHeader["auto_play_slides_loop"].bool).to(beFalse())
                                expect(serviceItemHeader["timed_slide_interval"]).to(equal(0))
                                expect(serviceItemHeader["start_time"]).to(equal(0))
                                expect(serviceItemHeader["end_time"]).to(equal(0))
                                expect(serviceItemHeader["media_length"]).to(equal(0))
                                expect(serviceItemHeader["background_audio"]).to(equal([]))
                                expect(serviceItemHeader["theme_overwritten"].bool).to(beFalse())
                                expect(serviceItemHeader["will_auto_start"].bool).to(beFalse())
                                expect(serviceItemHeader["processor"].null).to(beAnInstanceOf(NSNull.self))
                            }
                        }
                    }
                }
            }            
        }
    }
    
    private func getExpectedLyricsForSong1() -> String {
        "<?xml version='1.0' encoding='UTF-8'?>\n<song xmlns=\"http://openlyrics.info/namespace/2009/song\" version=\"0.8\" createdIn=\"OpenLP 2.4.6\" modifiedIn=\"OpenLP 2.4.6\" modifiedDate=\"2018-04-17T01:12:04\"><properties><titles><title>Aabiragaamin Thaevan</title><title>Abrahamin Daevan Abiragamin Devan</title></titles><comments><comment>i18nTitle=ஆபிரகாமின் தேவன் ஈசாக்கின் தேவன்\nalbum=Jebathoatta Jeyageethanggal 35\nmediaUrl=https://www.youtube.com/watch?v=EQl-y2iikf4</comment></comments><verseOrder>c1 c2 v1 o1 c1 c2 v2 o2 c1 c2 v3 o3 c1 c2</verseOrder><authors><author>Fr. S. J. Berchmans {பெர்க்மான்ஸ்}</author></authors><songbooks><songbook name=\"Jebathoatta Jeyageethanggal {ஜெபத்தோட்ட ஜெயகீதங்கள்}\" entry=\"377\"/></songbooks><themes><theme>Jebathoatta Jeyageethanggal {ஜெபத்தோட்ட ஜெயகீதங்கள்}</theme></themes></properties><format><tags application=\"OpenLP\"><tag name=\"y\"><open><![CDATA[<span style=\"-webkit-text-fill-color:yellow\">]]></open><close><![CDATA[</span>]]></close></tag></tags></format><lyrics><verse name=\"c1\"><lines><tag name=\"y\">ஆபிரகாமின் தேவன் ஈசாக்கின் தேவன்</tag><br/>Aabiragaamin thaevan eesaakkin thaevan<br/><tag name=\"y\">யாக்கோபின் தேவன் உன்னை ஆசிர்வதிப்பார்</tag><br/>Yaakoabin thaevan unnai aasirvathipaar</lines></verse><verse name=\"c2\"><lines><tag name=\"y\">தகதிமி தகஜனு தகதிமி தகஜனு</tag><br/>Thakathimi thagajanu thakathimi thagajanu<br/><tag name=\"y\">தகதிமி தகஜனு தகதிமி தகஜனு ஆ....ஆ</tag><br/>Thakathimi thagajanu thakathimi thagajanu aa aa aa...</lines></verse><verse name=\"v1\"><lines><tag name=\"y\">1. கர்த்தருக்கு பயந்து</tag><br/>Kartharukku payanthu<br/><tag name=\"y\">வழிகளில் நடக்கின்ற நீ</tag><br/>Vazhigalil nadakindra nee<br/><tag name=\"y\">பாக்கியவான் பாக்கியவான்</tag><br/>Paakkiyavaan paakkiyavaan</lines></verse><verse name=\"o1\"><lines><tag name=\"y\">உழைப்பின் பயனை நீ</tag><br/>Uzhaippin payanai nee<br/><tag name=\"y\">உண்பது நிச்சயமே நிச்சயமே</tag><br/>Unbathu nichayamae nichayamae</lines></verse><verse name=\"v2\"><lines><tag name=\"y\">2.நன்மையும் பாக்கியமும்</tag><br/>Nanmaiyum paakiyamum<br/><tag name=\"y\">உன் வாழ்வில் நீ காண்பாய்</tag><br/>Un vaazhvil nee kaanbaai<br/><tag name=\"y\">செல்வமும் ஆஸ்தியும் தேடி வரும் தினமும்</tag><br/>Selvamum aasthiyum thaedi varum thinamum</lines></verse><verse name=\"o2\"><lines><tag name=\"y\">ஜீவனுள்ள நாட்களெல்லாம்</tag><br/>Jeevanulla naatkalellaam<br/><tag name=\"y\">செழிப்பை நீ காண்பாய் நீ காண்பாய்</tag><br/>Sezhippai nee kaanbaai nee kaanbaai</lines></verse><verse name=\"v3\"><lines><tag name=\"y\">3. இல்லத்தில் உன் மனைவி</tag><br/>Illathil un manaivi<br/><tag name=\"y\">கனிதரும் திராட்சைச் செடி</tag><br/>Kanitharum thiraatchaich chedi<br/><tag name=\"y\">பிள்ளைகள் ஒலிவமரக் கன்றுகள்போல் வளர்வார்கள்</tag><br/>Pillaigal olivamarak kandrugalpol valarvaargal</lines></verse><verse name=\"o3\"><lines><tag name=\"y\">பிள்ளைகளின் பிள்ளைகளை காண்பது</tag><br/>Pillaigalin pillaigalai kaanbathu<br/><tag name=\"y\">நிச்சயம் நிச்சயமே</tag><br/>Nichchayam nichchayamae</lines></verse></lyrics></song>"
    }
}
